@model Avocado.Web.Models.Posts.MyPostsViewModel
@{
    ViewBag.Title = "Creativime";
    var _imagePath = System.Configuration.ConfigurationManager.AppSettings["AzureStorageUri"] + "/" + User.Identity.Name.Split('|')[0];
}
@section Head{
    <link href="@Url.Content("~/Content/css/fileuploader.css")" rel="stylesheet" type="text/css" />
}

<div class="container">
    <div class="row">
        <div class="span16">
            @Html.Partial("_TabNavigation")
        </div>
    </div>
    <div class="row">
        <div class="span12">
            <div id="message" class="alert-message">
              <a id="closeMessage" class="close" href="#">×</a>
              <p></p>
            </div>
            <div>
                <div>
                    <input id="getStartedButton" type="button" class="btn large danger pull-left" value="Post A New Creation!" />
                </div>
                
                @using(Html.BeginForm("SaveNewPost", "Posts", FormMethod.Post, new { id="newPostForm", @class="clear" }))
                {
                    <h3>Post A New Creation</h3>
                    
                    @Html.ValidationSummary(excludePropertyErrors: false, message: "", htmlAttributes: new { @class = "alert-message error" })

                    <div>
                        <img id="mainImage" class="pic-frame" src="http://placehold.it/500x250&text=upload+your+image" alt="your image" />
                        @Html.ValidationMessageFor(x => x.NewMainImage, "Main Image Required")
                    </div>
                    
                    <p class="row-below">
                        <span id="file-uploader">      
                            <noscript>Please enable JavaScript to use file uploader.</noscript>         
                        </span>
                    </p>
                    <p class="form-input">
                        @Html.LabelFor(x => x.NewTitle, "Title")
                        @Html.TextBoxFor(x => x.NewTitle)
                        @Html.ValidationMessageFor(x => x.NewTitle, "Title Required")
                    </p>
                    
                    <p class="form-input">
                        @Html.LabelFor(x => x.NewDescription, "Description")
                        @Html.TextAreaFor(x => x.NewDescription, 10, 40, new { @class = "profileTextArea" })
                        @Html.ValidationMessageFor(x => x.NewDescription, "Description Required")
                    </p>
                    
                    <p>
                        @Html.DropDownList("CategoriesValue", Model.Categories, "Select a Category")
                        @Html.ValidationMessageFor(x => x.NewPostCategory, "Category Required")
                    </p>
                    
                    <p>
                        <input id="cancelButton" type="button" class="btn large danger pull-left" style="margin-right:5px;" value="Cancel" />
                        <input id="newPostButton" type="submit" class="btn large info pull-left" value="Save Post" />
                    </p>
                    
                    @Html.HiddenFor(x => x.NewMainImage)
                    @Html.HiddenFor(x => x.NewPostCategory)
                }
                
            </div>
            <div class="clear"></div>
            <hr />
            @foreach (var post in Model.MyPosts.OrderByDescending(x => x.InsertDate))
            {   
                <div>
                    <h4 class="pull-left">@post.Title </h4>
                    <h6 class="pull-right">by @post.Account.UserName</h6>
                </div>
                
                <div class="row clear">
                    <div class="span5">
                        <img class="pic-frame" src="@_imagePath/medium/@post.MainImage" alt="post image" />
                    </div>
                    <div class="span7">
                        <div class="alert-message block-message">
                            @post.Description
                        </div>
                        <div>
                            @if (post.Comments.Count > 0)
                            { 
                                <div class="alert-message block-message info">
                                    @foreach (var comment in post.Comments.Take(3))
                                    { 
                                        <div class="comment-block">
                                            <img src="@Url.Content("~/Content/images/man-small.png")" style="margin-right:10px;" class="pull-left" alt="profile pic" />
                                            @comment.Comment1
                                        </div>
                                    }
                                        
                                    @if (post.Comments.Count > 3)
                                    { 
                                        <div style="text-align:center"><a href="#">View All @post.Comments.Count() Comments...</a></div>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <hr />
            }
        </div>
        <div class="span4">
            @Html.Partial("_ActivityBar")
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript" src="@Url.Content("~/Scripts/fileuploader.js")"></script>
    <script type="text/javascript">
        function getParameterByName(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);
            var results = regex.exec(window.location.href);
            if (results == null)
                return "";
            else
                return decodeURIComponent(results[1].replace(/\+/g, " "));
        }

        $(function () {
            var uploader = new qq.FileUploader({
                allowedExtensions: ['jpg', 'jpeg', 'png', 'gif'],
                sizeLimit: 7340032,
                minSizeLimit: 1,
                buttonTitle: 'browse...', //text for uploader button
                buttonText: 'Select Image', //title for uploader button
                element: document.getElementById('file-uploader'),
                action: '/Posts/UploadFiles',
                onProgress: function (id, fileName, loaded, total) { },
                onComplete: function (id, fileName, responseJSON) {
                    if (responseJSON.success) {
                        $('#NewMainImage').attr('value', fileName);
                        $('#mainImage').attr('src', responseJSON.imgPath);
                        $('.qq-upload-list').empty();
                        //alert('upload completed! the new file path is ' + responseJSON.imgPath);
                    }
                }
            });

            if (getParameterByName('from') == "button") {
                $('#newPostForm').show();
                $('#getStartedButton').hide();
            }
            else {
                $('#newPostForm').hide();
            }


            $('#getStartedButton').click(function () {
                $('#newPostForm').slideDown('slow');
                $(this).fadeOut('slow');
            });

            $('#cancelButton').click(function () {
                $('#newPostForm').slideUp('Slow');
                $('#getStartedButton').fadeIn('slow');
            });

            $('#message').hide();

            $('#closeMessage').click(function () {
                $('#message').fadeOut('slow');
            });

            $('#newPostForm').live("submit", function (event) {
                event.preventDefault();
                SaveNewPost();
            });

            $('#CategoriesValue').change(function () {
                $('#NewPostCategory').attr('value', $(this).val());
            });
        });

        function SaveNewPost() {
            var formData = $("#newPostForm").serialize();
            $.ajax({
                type: "POST",
                url: "/Posts/SaveNewPost",
                data: formData,
                dataType: "json",
                success: function (data) {
                    if (data.success == true) {
                        $('#message p').html(data.message);
                        $('#message').addClass('success');
                        $('#message').fadeIn('slow');
                        //alert(data.message);
                    }
                    else {
                        $('#message p').html(data.message);
                        $('#message').addClass('error');
                        $('#message').fadeIn('slow');

                        //alert(data.message);
                    }
                }
            });
            
            
        }
    </script>
}